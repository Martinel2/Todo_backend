name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: gradle 

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Install dependencies
      run: ./gradlew dependencies

    - name: Run tests
      env:
        SPRING_PROFILES_ACTIVE: "test"
        DATABASE_URL: "jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1"
        DB_USERNAME: "sa"
        DB_PASSWORD: "password"
      run: ./gradlew build

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: Project
        path: build/libs/*.jar
  cd:
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: Project
          path: ./build/libs

      # Docker Hub login
      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/todo:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/todo:latest

      - name: Create .ssh directory and add EC2 host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Create private key file
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Upload project files to EC2
        run: |
          rsync -avz --progress --checksum --ignore-existing --exclude 'node_modules' --exclude '.git' \
          -e "ssh -i private_key.pem" ./ \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/project/

      - name: Deploy to EC2 and restart Docker containers using Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.EC2_USER }}/project/
            
            # 환경 변수 파일 생성
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" > .env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env

            #sudo aa-remove-unknown

            # Stop and remove existing containers
            docker-compose down || true
            
            # Pull the latest Docker image
            docker-compose pull
            
            # Start the containers using Docker Compose
            docker-compose up -d --build

      - name: Add EC2 public IP to /etc/hosts
        run: |
          echo "$EC2_PUBLIC_IP todo.com" | sudo tee -a /etc/hosts
        env:
          EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
      
      - name: Test HTTP response
        run: |
          curl --max-time 30 -I http://todo.com | grep "HTTP/1.1 200"        
      
      
      - name: Remove private key file
        run: rm -f private_key.pem
